# Generated by Django 5.2.6 on 2025-09-21 15:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="date joined"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "ordering": ["-date_joined"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("admin", "Administrator"),
                            ("manager", "Manager"),
                            ("developer", "Developer"),
                            ("client", "Client"),
                        ],
                        max_length=50,
                        unique=True,
                        verbose_name="role name",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="role_permissions",
                        to="auth.permission",
                        verbose_name="permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "role",
                "verbose_name_plural": "roles",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bio", models.TextField(blank=True, verbose_name="biography")),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_pics/",
                        verbose_name="profile picture",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="phone number"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        choices=[
                            ("UTC", "UTC (Coordinated Universal Time)"),
                            ("GMT", "GMT (Greenwich Mean Time)"),
                            ("EST", "EST (Eastern Standard Time)"),
                            ("EDT", "EDT (Eastern Daylight Time)"),
                            ("CT", "CT (Central Time)"),
                            ("MT", "MT (Mountain Time)"),
                            ("PT", "PT (Pacific Time)"),
                            ("AEST", "AEST (Australian Eastern Standard Time)"),
                            ("AEDT", "AEDT (Australian Eastern Daylight Time)"),
                            ("BST", "BST (British Summer Time)"),
                            ("CET", "CET (Central European Time)"),
                            ("CEST", "CEST (Central European Summer Time)"),
                            ("EET", "EET (Eastern European Time)"),
                            ("EEST", "EEST (Eastern European Summer Time)"),
                            ("IST", "IST (Indian Standard Time)"),
                            ("JST", "JST (Japan Standard Time)"),
                            ("KST", "KST (Korea Standard Time)"),
                            ("CST_CN", "CST (China Standard Time)"),
                            ("HKT", "HKT (Hong Kong Time)"),
                            ("SGT", "SGT (Singapore Time)"),
                            ("WET", "WET (Western European Time)"),
                            ("WEST", "WEST (Western European Summer Time)"),
                            ("MSK", "MSK (Moscow Standard Time)"),
                            ("SAST", "SAST (South Africa Standard Time)"),
                            ("NST", "NST (Newfoundland Standard Time)"),
                            ("HST", "HST (Hawaii Standard Time)"),
                            ("AKST", "AKST (Alaska Standard Time)"),
                            ("CHST", "CHST (Chamorro Standard Time)"),
                            ("SST", "SST (Samoa Standard Time)"),
                            ("NZST", "NZST (New Zealand Standard Time)"),
                            ("NZDT", "NZDT (New Zealand Daylight Time)"),
                        ],
                        default="UTC",
                        max_length=50,
                        verbose_name="timezone",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="department"
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="position"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="location"
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="date of birth"
                    ),
                ),
                (
                    "preferred_language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("es", "Spanish"),
                            ("fr", "French"),
                            ("de", "German"),
                            ("it", "Italian"),
                            ("pt", "Portuguese"),
                            ("ru", "Russian"),
                            ("zh", "Chinese"),
                            ("ja", "Japanese"),
                            ("ko", "Korean"),
                            ("ar", "Arabic"),
                            ("hi", "Hindi"),
                            ("bn", "Bengali"),
                            ("pa", "Punjabi"),
                            ("tr", "Turkish"),
                            ("nl", "Dutch"),
                            ("sv", "Swedish"),
                            ("fi", "Finnish"),
                            ("da", "Danish"),
                            ("no", "Norwegian"),
                            ("pl", "Polish"),
                            ("uk", "Ukrainian"),
                            ("th", "Thai"),
                            ("vi", "Vietnamese"),
                            ("id", "Indonesian"),
                            ("ms", "Malay"),
                            ("fil", "Filipino"),
                        ],
                        default="en",
                        max_length=10,
                        verbose_name="preferred language",
                    ),
                ),
                (
                    "two_factor_enabled",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user has enabled two-factor authentication.",
                        verbose_name="two factor authentication",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="profiles",
                        to="accounts.role",
                        verbose_name="role",
                    ),
                ),
            ],
            options={
                "verbose_name": "profile",
                "verbose_name_plural": "profiles",
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("login", "User Login"),
                            ("logout", "User Logout"),
                            ("password_change", "Password Changed"),
                            ("profile_update", "Profile Updated"),
                            ("role_update", "Role Updated"),
                            ("permission_update", "Permission Updated"),
                        ],
                        max_length=50,
                        verbose_name="action",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP address"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="user agent")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="timestamp"),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="metadata"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "audit log",
                "verbose_name_plural": "audit logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "action"], name="accounts_au_user_id_96c97d_idx"
                    ),
                    models.Index(
                        fields=["timestamp"], name="accounts_au_timesta_276167_idx"
                    ),
                ],
            },
        ),
    ]
