version: '3.9'

# Define volumes for persistent data
volumes:
  sqlite_data:
  static_volume:
  media_volume:

services:
  # Nginx Web Server
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - app_network

  # Django Web Application
  web:
    build:
      context: .
      target: development
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - sqlite_data:/app/db
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "8000"
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=pmboard.settings
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - app_network

  # Celery Worker
  celery_worker:
    build:
      context: .
      target: celery-worker
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=pmboard.settings
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - app_network

  # Celery Beat
  celery_beat:
    build:
      context: .
      target: celery-beat
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=pmboard.settings
    depends_on:
      - web
      - celery_worker
    restart: unless-stopped
    networks:
      - app_network

networks:
  app_network:
    driver: bridge